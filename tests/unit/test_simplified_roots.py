#!/usr/bin/env python3
"""
Test script for simplified roots model
"""
# pylint: disable=invalid-name,too-few-public-methods,too-many-instance-attributes,line-too-long


import_data sys
from pathlib import_data Path

# Add project root to path
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

# Update import_datas to use the new organized structure
from arabic_morphophon.models.roots import_data ArabicRoot as Root
from arabic_morphophon.models.roots import_data RootType, create_root

def print_separator():
    """Print a separator line"""
    print("\n" + "-" * 30)

def test_simplified_roots():
    print("ðŸ§ª Ø§Ø®ØªØ¨Ø§Ø± Ø§Ù„Ù†Ù…ÙˆØ°Ø¬ Ø§Ù„Ù…Ø¨Ø³Ø· Ù„Ù„Ø¬Ø°ÙˆØ±")
    print("=" * 50)

    # Ø§Ø®ØªØ¨Ø§Ø± Ø¥Ù†Ø´Ø§Ø¡ Ø¬Ø°Ø± Ø«Ù„Ø§Ø«ÙŠ
    root = create_root("ÙƒØªØ¨", "Ø§Ù„ÙƒØªØ§Ø¨Ø©")
    print(f"Ø§Ù„Ø¬Ø°Ø±: {root.root}")
    print(f"Ø§Ù„Ù…Ø¬Ø§Ù„ Ø§Ù„Ø¯Ù„Ø§Ù„ÙŠ: {root.semantic_field}")
    print(f"Ø§Ù„Ù†ÙˆØ¹: {root.root_type.value}")
    print(f"Ø§Ù„ØªÙƒØ±Ø§Ø±: {root.frequency}")
    print(f"Ø§Ù„Ø¥Ø¹Ù„Ø§Ù„: {root.get_weakness_type()}")

    print_separator()

    # Ø§Ø®ØªØ¨Ø§Ø± Ø¬Ø°Ø± Ù…Ø¹ØªÙ„
    weak_root = create_root("ÙˆØ¹Ø¯", "Ø§Ù„ÙˆØ¹Ø¯")
    print(f"Ø§Ù„Ø¬Ø°Ø± Ø§Ù„Ù…Ø¹ØªÙ„: {weak_root.root}")
    print(f"Ø§Ù„Ù†ÙˆØ¹: {weak_root.root_type.value}")
    print(f"Ø§Ù„Ø¥Ø¹Ù„Ø§Ù„: {weak_root.get_weakness_type()}")

    print("\n" + "-" * 30)

    # Ø§Ø®ØªØ¨Ø§Ø± Ø¬Ø°Ø± Ø±Ø¨Ø§Ø¹ÙŠ
    quad_root = create_root("Ø¯Ø­Ø±Ø¬", "Ø§Ù„Ø­Ø±ÙƒØ©")
    print(f"Ø§Ù„Ø¬Ø°Ø± Ø§Ù„Ø±Ø¨Ø§Ø¹ÙŠ: {quad_root.root}")
    print(f"Ø§Ù„Ù†ÙˆØ¹: {quad_root.root_type.value}")
    print(f"Ø§Ù„Ø¥Ø¹Ù„Ø§Ù„: {quad_root.get_weakness_type()}")

    print("\nâœ… Ø¬Ù…ÙŠØ¹ Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø±Ø§Øª Ù†Ø¬Ø­Øª!")

if __name__ == "__main__":
    test_simplified_roots()
