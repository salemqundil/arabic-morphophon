# =========================================
# Arabic Phonological Analysis - Python 3.13 Configuration
# pyproject.toml - Modern Python Project Configuration
# =========================================

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "arabic-phonological-analysis"
version = "1.0.0"
description = "Advanced Arabic Phonological Analysis Engine with Production Deployment"
readme = "README.md"
authors = [
    {name = "Development Team", email = "dev@arabic-phonology.com"}
]
license = {text = "MIT"}
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "Flask>=3.0.0",
    "Flask-CORS>=4.0.0",
    "Flask-SQLAlchemy>=3.1.1",
    "gunicorn>=21.2.0",
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.1",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]
ml = [
    "scikit-learn>=1.3.2",
    "transformers>=4.36.0",
    "torch>=2.1.1",
]
docs = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/your-org/arabic-phonological-analysis"
Documentation = "https://arabic-phonological-analysis.readthedocs.io"
Repository = "https://github.com/your-org/arabic-phonological-analysis.git"
Issues = "https://github.com/your-org/arabic-phonological-analysis/issues"

[project.scripts]
arabic-phonology = "main:main"

# ==================
# Tool Configuration
# ==================

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "arabic_reshaper.*",
    "bidi.*",
    "epitran.*",
    "panphon.*",
    "phonemizer.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
    "setup.py",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["phonology*", "data*"]
exclude = ["tests*"]