"""
๐งฌ Arabic Phoneme Weight Map Service,
    Interactive mapping between phonemes and morphological patterns
"""

# pylint: disable=broad-except,unused-variable,too-many-arguments
# pylint: disable=too-few-public-methods,invalid-name,unused-argument
# flake8: noqa: E501,F401,F821,A001,F403
# mypy: disable-error-code=no-untyped def,misc
    import json  # noqa: F401
    from typing import Dict, List, Optional, Tuple
    from dataclasses import dataclass, asdict  # noqa: F401
    from collections import defaultdict  # noqa: F401


@dataclass,
    class PhonemeMapping:
    """Data class for phoneme characteristics"""

    letter: str,
    articulation_point: str  # ุงููุฎุฑุฌ,
    common_position: str  # ุงููููุน_ุงูุฃุดูุน,
    common_patterns: List[str]  # ุงูุฃูุฒุงู_ุงูุดุงุฆุนุฉ,
    behavior: str  # ุงูุณููู,
    frequency: str  # ุชูุงุชุฑ_ุงูุธููุฑ,
    phonetic_impact: str  # ุงูุชุฃุซูุฑ_ุงูุตูุชู,
    description: str  # ุงููุตู,
    class PhonemeWeightMapService:
    """Service for managing phoneme pattern relationships"""

    def __init__(self):  # type: ignore[no-untyped def]
        """TODO: Add docstring."""
        self.phoneme_map = self._initialize_phoneme_map()
        self.pattern_weights = self._calculate_pattern_weights()

    def _initialize_phoneme_map(self) -> Dict[str, PhonemeMapping]:
        """Initialize the complete phoneme mapping from Arabic alphabet - alphabetically ordered"""

        phoneme_data = [
            {
                "letter": "ุฃ",
                "articulation_point": "ุญููู",
                "common_position": "ุจุฏุงูุฉ",
                "common_patterns": ["ุฃูููุนููู", "ุฅูููุนูุงู", "ููุนููุงู"],
                "behavior": "ูุญูุฒ/ุจุงุฏุฆ",
                "frequency": "ูุฑุชูุน ูู ุงููุฒูุฏ",
                "phonetic_impact": "ูุงุทุน/ููุชูุญ",
                "description": "ููุชุญ ุงูุชุฑููุจ ุงูุตุฑูู ูููุฌู ูุญู ุงูุชุนุฏูุฉ",
            },
            {
                "letter": "ุง",
                "articulation_point": "ููู",
                "common_position": "ูุณุท ุงููุฒู",
                "common_patterns": ["ููุงุนููู", "ููุนูุงููุฉ", "ููุนูุงููุฉ"],
                "behavior": "ููู/ููุฏูุฏ",
                "frequency": "ุดุงุฆุน",
                "phonetic_impact": "ูุฏู/ูุงุณุน",
                "description": "ููุณุน ุงูููุทุน ููุฎูู ุฅููุงุนูุง ุตุฑูููุง ูููุฒูุง",
            },
            {
                "letter": "ุจ",
                "articulation_point": "ุดููู",
                "common_position": "ูุงู",
                "common_patterns": ["ููุนููู", "ููุนูููู", "ููููุนููู", "ููููุนูุงู"],
                "behavior": "ูุณุชูุฑ/ุซููู",
                "frequency": "ูุฑุชูุน",
                "phonetic_impact": "ููู/ุตูุช ุงููุฌุงุฑู",
                "description": "ุตุงูุช ููู ููุณุชุฎุฏู ุบุงูุจุงู ูู ููุงูุฉ ุงูุฌุฐุฑ",
            },
            {
                "letter": "ุช",
                "articulation_point": "ุทุฑู ุงููุณุงู",
                "common_position": "ูู/ุนู",
                "common_patterns": ["ููุนููู", "ููุงุนููู", "ููููุงุนูู", "ุชูููุงุนููู"],
                "behavior": "ูุฑู/ูุฑุจูุท",
                "frequency": "ูุฑุชูุน ุฌุฏุงู",
                "phonetic_impact": "ูุญุชู ูุชูุณูุท",
                "description": "ุตุงูุช ุชูุงุนูู ูุชุนุฏุฏ ุงูุฃุฏูุงุฑ",
            },
            {
                "letter": "ุซ",
                "articulation_point": "ุจูู ุงูุฃุณูุงู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ููููุนููู"],
                "behavior": "ูุงุฏุฑ/ูุญุฏูุฏ",
                "frequency": "ููุฎูุถ",
                "phonetic_impact": "ูุญุชู ุฎููู",
                "description": "ุตุงูุช ูุงุฏุฑ ุงูุงุณุชุนูุงู ูู ุงูุฌุฐูุฑ ุงูุดุงุฆุนุฉ",
            },
            {
                "letter": "ุฌ",
                "articulation_point": "ูุณุท ุงููุณุงู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ููุงุนููู"],
                "behavior": "ููู/ูุชุญุฑู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุงููุฌุงุฑู ุฃูุงูู",
                "description": "ูุฏู ุนูู ุงูุญุฑูุฉ ูุงูุชุฌูุน",
            },
            {
                "letter": "ุญ",
                "articulation_point": "ุญูู",
                "common_position": "ุนูู ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ููุนููู", "ููุงุนูู"],
                "behavior": "ูุงุฏุฆ/ูุณุชูุฑ",
                "frequency": "ูุชูุณุท ุฅูู ูุฑุชูุน",
                "phonetic_impact": "ูุญุชู ุญููู",
                "description": "ูุนุทู ูุนููุฉ ุตูุชูุฉ ูุฏูุงูุฉ ุนูู ุงููุฏูุก",
            },
            {
                "letter": "ุฎ",
                "articulation_point": "ุญูู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู"],
                "behavior": "ุฎุดู/ูููุฒ",
                "frequency": "ููุฎูุถ ุฅูู ูุชูุณุท",
                "phonetic_impact": "ูุญุชู ุฎุดู",
                "description": "ูุฏู ุนูู ุงูุฎุดููุฉ ูุงูููุฉ",
            },
            {
                "letter": "ุฏ",
                "articulation_point": "ุทุฑู ุงููุณุงู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุชูููุงุนููู"],
                "behavior": "ููู/ูุงุถุญ",
                "frequency": "ูุชูุณุท ุฅูู ูุฑุชูุน",
                "phonetic_impact": "ุงููุฌุงุฑู ูุงุถุญ",
                "description": "ูุฏู ุนูู ุงููุถูุญ ูุงูุญุณู",
            },
            {
                "letter": "ุฐ",
                "articulation_point": "ุจูู ุงูุฃุณูุงู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู"],
                "behavior": "ูุงุฏุฑ/ูููุฒ",
                "frequency": "ููุฎูุถ",
                "phonetic_impact": "ูุญุชู ูุฌููุฑ",
                "description": "ุตุงูุช ูุงุฏุฑ ูู ุฏูุงูุฉ ุฎุงุตุฉ",
            },
            {
                "letter": "ุฑ",
                "articulation_point": "ุทุฑู ุงููุณุงู",
                "common_position": "ุนูู ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ููุนููู", "ููููุนููู"],
                "behavior": "ูุชุฏุญุฑุฌ/ุญููู",
                "frequency": "ูุฑุชูุน ุฌุฏุงู",
                "phonetic_impact": "ุชูุฑุงุฑู/ุฑูุงู",
                "description": "ุตุงูุช ุดุงุฆุน ุฌุฏุงู ูุนุทู ุญูููุฉ ููุฌุฐุฑ",
            },
            {
                "letter": "ุฒ",
                "articulation_point": "ุฃุณูุงู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู"],
                "behavior": "ุญุงุฏ/ูุฌููุฑ",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุตููุฑู ูุฌููุฑ",
                "description": "ูุฏู ุนูู ุงูุญุฏุฉ ูุงููุถูุญ",
            },
            {
                "letter": "ุณ",
                "articulation_point": "ุฃุณูุงู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ุงุณูุชูููุนููู", "ููุงุนููู", "ููุนูุงู"],
                "behavior": "ุณููุณ/ูุญุงูุฏ",
                "frequency": "ูุฑุชูุน",
                "phonetic_impact": "ุตููุฑู ูุณุชูุฑ",
                "description": "ูุชูุฑุฑ ูู ุงูุฃูุนุงู ุงูุนุงูุฉ ูุงููุฌุฑุฏุฉ",
            },
            {
                "letter": "ุด",
                "articulation_point": "ูุณุท ุงููุณุงู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุชูููุงุนููู"],
                "behavior": "ูุงุณุน/ููุชุดุฑ",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุตููุฑู ูุงุณุน",
                "description": "ูุฏู ุนูู ุงูุงูุชุดุงุฑ ูุงููุถูุญ",
            },
            {
                "letter": "ุต",
                "articulation_point": "ุทุฑู ุงููุณุงู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ููุงุนููู"],
                "behavior": "ููุฎู/ููู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุตููุฑู ููุฎู",
                "description": "ูุถูู ููุฉ ูุชูุฎูููุง ุนูู ุงูุฌุฐุฑ",
            },
            {
                "letter": "ุถ",
                "articulation_point": "ุฌุงูุจ ุงููุณุงู",
                "common_position": "ุนูู ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุงููููุนููู"],
                "behavior": "ููุฎู/ูููุฒ",
                "frequency": "ููุฎูุถ ุฅูู ูุชูุณุท",
                "phonetic_impact": "ุฌุงูุจู ููุฎู",
                "description": "ุตุงูุช ูููุฒ ููุนุฑุจูุฉ ูุฏู ุนูู ุงูููุฉ",
            },
            {
                "letter": "ุท",
                "articulation_point": "ุทุฑู ุงููุณุงู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุชูููุงุนููู"],
                "behavior": "ููุฎู/ุงููุฌุงุฑู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุงููุฌุงุฑู ููุฎู",
                "description": "ูุฏู ุนูู ุงูููุฉ ูุงูุชุฃุซูุฑ",
            },
            {
                "letter": "ุธ",
                "articulation_point": "ุจูู ุงูุฃุณูุงู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู"],
                "behavior": "ููุฎู/ูุงุฏุฑ",
                "frequency": "ููุฎูุถ",
                "phonetic_impact": "ูุญุชู ููุฎู",
                "description": "ุตุงูุช ูุงุฏุฑ ููุฎู ูู ุฏูุงูุฉ ุฎุงุตุฉ",
            },
            {
                "letter": "ุน",
                "articulation_point": "ุญูู",
                "common_position": "ุนูู ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ููุงุนููู", "ุฃูููุนููู"],
                "behavior": "ุนููู/ุญููู",
                "frequency": "ูุฑุชูุน",
                "phonetic_impact": "ุญููู ุนููู",
                "description": "ุตุงูุช ุญููู ูููุฒ ูุนุทู ุนูููุง ุตูุชููุง",
            },
            {
                "letter": "ุบ",
                "articulation_point": "ุญูู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุชูููุงุนููู"],
                "behavior": "ูุฌููุฑ/ููู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ูุญุชู ุญููู ูุฌููุฑ",
                "description": "ูุฏู ุนูู ุงูููุฉ ูุงูุชุบููุฑ",
            },
            {
                "letter": "ู",
                "articulation_point": "ุดููู ุฃุณูุงูู",
                "common_position": "ูุงุก ุฃู ูุงู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุชูููุงุนููู"],
                "behavior": "ูุญุชู/ุฎููู",
                "frequency": "ูุฑุชูุน",
                "phonetic_impact": "ูุญุชู ุฎููู",
                "description": "ุตุงูุช ุดุงุฆุน ูุฏู ุนูู ุงููุนู ูุงูุชุฃุซูุฑ",
            },
            {
                "letter": "ู",
                "articulation_point": "ูููู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุชูููุงุนููู"],
                "behavior": "ุงููุฌุงุฑู/ููู",
                "frequency": "ูุชูุณุท ุฅูู ูุฑุชูุน",
                "phonetic_impact": "ุงููุฌุงุฑู ุฎููู ููู",
                "description": "ูุฏู ุนูู ุงูููุฉ ูุงูุญุณู",
            },
            {
                "letter": "ู",
                "articulation_point": "ูููู",
                "common_position": "ูุงุก",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู", "ุงุณูุชูููุนููู"],
                "behavior": "ูุณุชูุฑ/ุซููู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุงููุฌุงุฑู ุฎููู",
                "description": "ุตุงูุช ุฎููู ูุฏู ุบุงูุจูุง ุนูู ูุนู ุญุณูู",
            },
            {
                "letter": "ู",
                "articulation_point": "ุทุฑู ุงููุณุงู",
                "common_position": "ูุงู ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ููุนููู", "ููููุนููู"],
                "behavior": "ุณุงุฆู/ูุณุชูุฑ",
                "frequency": "ูุฑุชูุน ุฌุฏุงู",
                "phonetic_impact": "ุฌุงูุจู ูุณุชูุฑ",
                "description": "ุตุงูุช ุดุงุฆุน ุฌุฏุงู ูุนุทู ุงุณุชูุฑุงุฑูุฉ",
            },
            {
                "letter": "ู",
                "articulation_point": "ุดููู",
                "common_position": "ูุงุก ุฃู ุนูู",
                "common_patterns": ["ููุนููู", "ููููุนููู", "ููุงุนูู"],
                "behavior": "ุฃููู/ูุณุชูุฑ",
                "frequency": "ูุฑุชูุน ุฌุฏุงู",
                "phonetic_impact": "ุฃููู ุดููู",
                "description": "ุตุงูุช ุฃููู ุดุงุฆุน ูุฏู ุนูู ุงูุงุณุชูุฑุงุฑ",
            },
            {
                "letter": "ู",
                "articulation_point": "ุฎูุดูู",
                "common_position": "ูุงู ุฃู ุฃูู ูุฒูุฏ",
                "common_patterns": ["ุงููููุนููู", "ููููููุนูู", "ุงุณูุชูููุนููู"],
                "behavior": "ููู/ุชุญูููู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุฃููู/ูุทุจูู",
                "description": "ุนูุตุฑ ุฅุถุงูู ูุฏู ุนูู ุงูุชุบูุฑ ูุงูุชุญูู",
            },
            {
                "letter": "ู",
                "articulation_point": "ุญูุฌุฑุฉ",
                "common_position": "ูุงู ุฃู ูุงุก ุงูุณูุช",
                "common_patterns": ["ููุนููู", "ุฃูููุนููู"],
                "behavior": "ุฎููู/ุชููุณู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ุชููุณู ุฎููู",
                "description": "ุตุงูุช ุฎููู ูุธูุฑ ูู ุงูููุงูุงุช",
            },
            {
                "letter": "ู",
                "articulation_point": "ุดููู",
                "common_position": "ูุณุท ุฃู ุขุฎุฑ",
                "common_patterns": ["ููุนููู", "ููุนููู", "ููููุนููู"],
                "behavior": "ููู/ุฎุงุชู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ููุชูุญ/ุฑุงุจุท",
                "description": "ุชุธูุฑ ูู ุงูุฎูุงุชูู ุฃู ุนูุฏ ุงููุฏ ุงูุตูุชู",
            },
            {
                "letter": "ู",
                "articulation_point": "ูุณุท ุงููุณุงู",
                "common_position": "ูุงู ุฃู ูุงุก",
                "common_patterns": ["ููุนููู", "ููุนูุงู", "ููุนูููุฉ"],
                "behavior": "ููู/ูุงุตู",
                "frequency": "ูุชูุณุท",
                "phonetic_impact": "ูุงุฆู/ุฑููู",
                "description": "ูุฏู ุนูู ุงูุงุณุชูุฑุงุฑูุฉ ูุงููุตู",
            },
        ]

        return {data["letter"]: PhonemeMapping(**data) for data in phoneme_data}

    def _calculate_pattern_weights(self) -> Dict[str, float]:
        """Calculate weights for morphological patterns based on frequency"""
        pattern_counts = defaultdict(int)

        # Count pattern occurrences across all phonemes,
    for phoneme in self.phoneme_map.values():
            for pattern in phoneme.common_patterns:
                pattern_counts[pattern] += 1

        # Convert to normalized weights,
    max_count = max(pattern_counts.values()) if pattern_counts else 1,
    return {pattern: count / max_count for pattern, count in pattern_counts.items()}

    def get_phoneme_info(self, letter: str) -> Optional[PhonemeMapping]:
        """Get detailed information for a specific phoneme"""
        return self.phoneme_map.get(letter)

    def get_patterns_for_phoneme(self, letter: str) -> List[str]:
        """Get common patterns for a specific phoneme"""
        phoneme = self.phoneme_map.get(letter)
        return phoneme.common_patterns if phoneme else []

    def get_phonemes_for_pattern(self, pattern: str) -> List[str]:
        """Get phonemes that commonly use a specific pattern"""
        result = []
        for letter, phoneme in self.phoneme_map.items():
            if pattern in phoneme.common_patterns:
                result.append(letter)
        return result,
    def analyze_word_phonetic_structure(self, word: str) -> Dict:
        """Analyze the phonetic structure of a word"""
        analysis = {
            "word": word,
            "phoneme_breakdown": [],
            "predicted_patterns": [],
            "phonetic_characteristics": {
                "articulation_diversity": set(),
                "behavior_types": set(),
                "frequency_distribution": [],
            },
        }

        for char in word:
            if char in self.phoneme_map:
                phoneme = self.phoneme_map[char]
                analysis["phoneme_breakdown"].append(
                    {
                        "letter": char,
                        "articulation": phoneme.articulation_point,
                        "behavior": phoneme.behavior,
                        "frequency": phoneme.frequency,
                    }
                )

                analysis["phonetic_characteristics"]["articulation_diversity"].add(
                    phoneme.articulation_point
                )
                analysis["phonetic_characteristics"]["behavior_types"].add(
                    phoneme.behavior
                )
                analysis["phonetic_characteristics"]["frequency_distribution"].append(
                    phoneme.frequency
                )

                # Add common patterns for this phoneme,
    analysis["predicted_patterns"].extend(phoneme.common_patterns)

        # Convert sets to lists for JSON serialization,
    analysis["phonetic_characteristics"]["articulation_diversity"] = list(
            analysis["phonetic_characteristics"]["articulation_diversity"]
        )
        analysis["phonetic_characteristics"]["behavior_types"] = list(
            analysis["phonetic_characteristics"]["behavior_types"]
        )

        # Remove duplicate patterns and sort by weight,
    unique_patterns = list(set(analysis["predicted_patterns"]))
        analysis["predicted_patterns"] = sorted(
            unique_patterns, key=lambda p: self.pattern_weights.get(p, 0), reverse=True
        )

        return analysis,
    def get_interactive_map_data(self) -> List[Dict]:
        """Get data formatted for interactive display"""
        return [
            {
                "ุงูุญุฑู": phoneme.letter,
                "ุงููุฎุฑุฌ": phoneme.articulation_point,
                "ุงููููุน_ุงูุฃุดูุน": phoneme.common_position,
                "ุงูุฃูุฒุงู_ุงูุดุงุฆุนุฉ": phoneme.common_patterns,
                "ุงูุณููู": phoneme.behavior,
                "ุชูุงุชุฑ_ุงูุธููุฑ": phoneme.frequency,
                "ุงูุชุฃุซูุฑ_ุงูุตูุชู": phoneme.phonetic_impact,
                "ุงููุตู": phoneme.description,
            }
            for phoneme in sorted(self.phoneme_map.values(), key=lambda x: x.letter)
        ]

    def search_patterns(self, query: str) -> List[Dict]:
        """Search for patterns and related phonemes"""
        results = []
        query_lower = query.lower()

        for letter, phoneme in self.phoneme_map.items():
            # Search in patterns,
    matching_patterns = [
                p for p in phoneme.common_patterns if query_lower in p.lower()
            ]

            if matching_patterns or query_lower in phoneme.behavior.lower():
                results.append(
                    {
                        "phoneme": letter,
                        "matching_patterns": matching_patterns,
                        "phoneme_info": asdict(phoneme),
                    }
                )

        return results,
    def get_phoneme_statistics(self) -> Dict:
        """Get statistical overview of the phoneme map"""
        stats = {
            "total_phonemes": len(self.phoneme_map),
            "total_patterns": len(self.pattern_weights),
            "articulation_points": defaultdict(int),
            "behavior_types": defaultdict(int),
            "frequency_levels": defaultdict(int),
            "most_common_patterns": [],
        }

        for phoneme in self.phoneme_map.values():
            stats["articulation_points"][phoneme.articulation_point] += 1,
    stats["behavior_types"][phoneme.behavior] += 1,
    stats["frequency_levels"][phoneme.frequency] += 1

        # Get most common patterns,
    stats["most_common_patterns"] = sorted(
            self.pattern_weights.items(), key=lambda x: x[1], reverse=True
        )[:10]

        return stats,
    def get_pandas_style_dataframe_data(self) -> List[Dict]:
        """
        Get phoneme data formatted as pandas DataFrame style for interactive display,
    ุฎุฑูุทุฉ ุชูุงุนููุฉ ูุฑุชุจุฉ ุญุณุจ ุงูุญุฑู ูู ุฃ ุฅูู ู
        """
        dataframe_data = []

        # Sort phonemes alphabetically according to Arabic alphabet order,
    arabic_alphabet_order = [
            "ุฃ",
            "ุง",
            "ุจ",
            "ุช",
            "ุซ",
            "ุฌ",
            "ุญ",
            "ุฎ",
            "ุฏ",
            "ุฐ",
            "ุฑ",
            "ุฒ",
            "ุณ",
            "ุด",
            "ุต",
            "ุถ",
            "ุท",
            "ุธ",
            "ุน",
            "ุบ",
            "ู",
            "ู",
            "ู",
            "ู",
            "ู",
            "ู",
            "ู",
            "ู",
            "ู",
        ]

        for letter in arabic_alphabet_order:
            if letter in self.phoneme_map:
                phoneme = self.phoneme_map[letter]
                dataframe_data.append(
                    {
                        "ุงูุญุฑู": phoneme.letter,
                        "ุงููุฎุฑุฌ": phoneme.articulation_point,
                        "ุงููููุน_ุงูุฃุดูุน": phoneme.common_position,
                        "ุงูุฃูุฒุงู_ุงูุดุงุฆุนุฉ": phoneme.common_patterns,
                        "ุงูุณููู": phoneme.behavior,
                        "ุชูุงุชุฑ_ุงูุธููุฑ": phoneme.frequency,
                        "ุงูุชุฃุซูุฑ_ุงูุตูุชู": phoneme.phonetic_impact,
                        "ุงููุตู": phoneme.description,
                    }
                )

        return dataframe_data,
    def create_interactive_phoneme_display(self) -> Dict:
        """
        Create an interactive display similar to ace_tools.display_dataframe_to_user
        """
        dataframe_data = self.get_pandas_style_dataframe_data()

        return {
            "title": "๐งฌ ุฎุฑูุทุฉ ุชูุงุนููุฉ ูุฑุชุจุฉ ุจูู ุงููููููุงุช ูุงูุฃูุฒุงู ุงูุตุฑููุฉ",
            "description": "Interactive mapping between Arabic phonemes and morphological patterns, sorted alphabetically",
            "data": dataframe_data,
            "metadata": {
                "total_entries": len(dataframe_data),
                "sorted_by": "Arabic alphabetical order (ุฃ ุฅูู ู)",
                "columns": [
                    {"key": "ุงูุญุฑู", "description": "Arabic Letter/Phoneme"},
                    {"key": "ุงููุฎุฑุฌ", "description": "Articulation Point"},
                    {"key": "ุงููููุน_ุงูุฃุดูุน", "description": "Most Common Position"},
                    {"key": "ุงูุฃูุฒุงู_ุงูุดุงุฆุนุฉ", "description": "Common Patterns"},
                    {"key": "ุงูุณููู", "description": "Phonetic Behavior"},
                    {"key": "ุชูุงุชุฑ_ุงูุธููุฑ", "description": "Frequency of Occurrence"},
                    {"key": "ุงูุชุฃุซูุฑ_ุงูุตูุชู", "description": "Phonetic Impact"},
                    {"key": "ุงููุตู", "description": "Description"},
                ],
                "language": "Arabic",
                "created_at": "2025-07 09",
                "version": "2.0",
            },
        }


# Global instance,
    phoneme_service = PhonemeWeightMapService()
