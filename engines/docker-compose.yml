# Arabic Morphophonology System Deployment Configuration

version: '3.8'

services:
  # Backend API service based on the enhanced phonological engine
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - DEBUG=0
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
    restart: unless-stopped
    depends_on:
      - redis
      - db
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers ${MAX_WORKERS:-4}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Web frontend
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and task queue
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_USER=${DB_USER:-arabic_morphophon}
      - POSTGRES_DB=${DB_NAME:-morphophon_db}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-arabic_morphophon}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery worker for background tasks
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./data:/app/data
    environment:
      - DEBUG=0
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - db
    command: celery -A app.worker worker --loglevel=info
    restart: unless-stopped

  # Admin dashboard for monitoring
  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    depends_on:
      - redis
      - worker
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
