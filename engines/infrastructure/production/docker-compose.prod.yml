version: '3.8'

# Production overrides for docker-compose.yml
# Use with: docker compose -f docker-compose.yml -f infrastructure/production/docker-compose.prod.yml up -d

services:
  backend:
    restart: always
    deploy:
      replicas: ${BACKEND_REPLICAS:-2}
      resources:
        limits:
          cpus: '${BACKEND_CPU_LIMIT:-1}'
          memory: ${BACKEND_MEM_LIMIT:-1024M}
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENABLE_METRICS=${ENABLE_METRICS:-true}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    labels:
      - "com.arabic-morphophon.service=backend"
      - "com.arabic-morphophon.environment=production"

  frontend:
    restart: always
    deploy:
      replicas: ${FRONTEND_REPLICAS:-2}
      resources:
        limits:
          cpus: '${FRONTEND_CPU_LIMIT:-0.5}'
          memory: ${FRONTEND_MEM_LIMIT:-512M}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    labels:
      - "com.arabic-morphophon.service=frontend"
      - "com.arabic-morphophon.environment=production"

  db:
    restart: always
    command: postgres -c max_connections=${POSTGRES_MAX_CONNECTIONS:-200}
    deploy:
      resources:
        limits:
          cpus: '${DATABASE_CPU_LIMIT:-2}'
          memory: ${DATABASE_MEM_LIMIT:-4096M}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/production/db/init:/docker-entrypoint-initdb.d
      - ./infrastructure/production/db/conf:/etc/postgresql/conf.d:ro
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    labels:
      - "com.arabic-morphophon.service=database"
      - "com.arabic-morphophon.environment=production"

  redis:
    restart: always
    command: redis-server --appendonly yes --maxmemory ${REDIS_MAX_MEMORY:-1gb} --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '${REDIS_CPU_LIMIT:-0.5}'
          memory: ${REDIS_MEM_LIMIT:-1024M}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    labels:
      - "com.arabic-morphophon.service=cache"
      - "com.arabic-morphophon.environment=production"

  nginx:
    restart: always
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./infrastructure/production/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./infrastructure/production/nginx/ssl:/etc/nginx/ssl:ro
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    labels:
      - "com.arabic-morphophon.service=proxy"
      - "com.arabic-morphophon.environment=production"

  # Monitoring services (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./infrastructure/production/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - backend-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - ./infrastructure/production/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - backend-network
      - frontend-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:
